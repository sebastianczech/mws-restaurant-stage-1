!function(){"use strict";var e=[".","/","css/styles.css","js/dbhelper.js","js/main.js","js/restaurant_info.js","img/1.jpg","img/2.jpg","img/3.jpg","img/4.jpg","img/5.jpg","img/6.jpg","img/7.jpg","img/8.jpg","img/9.jpg","img/10.jpg","data/restaurants.json","index.html","restaurant.html"];self.addEventListener("install",function(n){console.log("Service worker installing..."),n.waitUntil(caches.open("mws-restaurant-cache-v1").then(function(n){return n.addAll(e)}))}),self.addEventListener("activate",function(e){console.log("Service worker activating...")}),self.addEventListener("fetch",function(e){console.log("Service worker is fetching: ",e.request.url),e.respondWith(caches.match(e.request).then(function(n){var t;return n||(t=e.request.url,console.log("Checking indexedDB for url: "+t),new Promise(function(e,n){if(t.includes("http://localhost:1337/restaurants")){console.log("Using indexDB for url: "+t);const r="mws-restaurant-db-v1",o="mws-restaurant-store-v1",s=indexedDB.open(r,1);s.onerror=function(e){n(s.error)},s.onupgradeneeded=function(e){e.target.result.createObjectStore(o,{keyPath:"id"}),console.log("IndexedDB is empty - need to fetch data"),fetch("http://localhost:1337/restaurants").then(function(e){var n=e.clone();n.json().then(function(e){console.log("Service worker is adding "+n.url+" to indexed database: ",e);const t="mws-restaurant-store-v1",r=indexedDB.open("mws-restaurant-db-v1",1);r.onupgradeneeded=function(e){e.target.result.createObjectStore(t,{keyPath:"id"})},r.onsuccess=function(n){var r=n.target.result,o=r.transaction(t,"readwrite"),s=o.objectStore(t);e.forEach(function(e){s.put(e)}),o.oncomplete=function(){r.close()}}})})},s.onsuccess=function(t){var r=t.target.result,s=r.transaction(o,"readwrite");const i=s.objectStore(o).getAll();var c=new Promise(function(e,n){i.onsuccess=function(n){e(n.target.result)},i.onerror=function(e){n(i.error)}});s.onerror=function(){n(err)},s.oncomplete=function(){r.close(),c.then(function(n){console.log("Content in indexedDB store: "+JSON.stringify(n)),e(n)},function(e){console.log("Error in indexedDB store: "+e),n(e)})}}}else console.log("Cannot use indexDB for url: "+t),n()})).then(function(n){console.log("Could not find in cache: "+e.request.url);var t=new Blob([JSON.stringify(n)],{type:"application/json"}),r=new Response(t);return console.log("Returning data for "+e.request.url+" from indexedDB: "+r),r},function(n){return console.log("File need to be fetched from url: "+e.request.url),fetch(e.request).then(function(n){return console.log("Returning data "+e.request.url+" from server after failed indexedDB: "+n),n})})||fetch(e.request).then(function(n){return console.log("Returning data for "+e.request.url+" from origin: "+n),n})},function(n){return console.log("There is a problem with cache for url: "+e.request.url),fetch(e.request).then(function(n){return console.log("Returning data "+e.request.url+" from server after failed cache: "+n),n})}))})}();